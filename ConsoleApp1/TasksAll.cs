namespace ConsoleApp1
{
    // task1 intervals
    // на вход подается строка типа "1-6,8-9,11" - это представление исходного множества через
    // интервалы подряд идущих цифр. Нужно из этой строки получить исходное множество чисел
    // из которых была построенна эта строка. Ответ должен быть осортирован в порядке возрастания
    //


    //task2 Snow
    /*    На планете началась вечная зима, теперь выпавший снег совсем перестал таять.Каждый день выпадает несколько миллиметров снега, после чего метеостанция замеряет глубину снега в одном месте и записывает её на отдельный лист в журнал.Достоверно известно, что перед первым днем замеров снега не было вовсе, а далее на протяжении всего периода замеров за день выпадало положительное целое число миллиметров снега.
     *    
    Вы получили в распоряжение журнал, чтобы проверить, не допустили ли ошибку на метеостанции при заполнении по случайности или из злого умысла. Но перед его изучением решили выпить чашечку кофе (вечная зима на дворе!) и случайно разлили его на журнал.В результате чего на некоторых его листах оказались неразличимые кляксы.
    Теперь вы просто хотите найти количество снега в миллиметрах, которое могло выпасть в каждый день замера или обличить метеостанцию в подтасовке, если по испорченному журналу можно достоверно сказать, что данные фальсифицированы.
    Среди всех вариантов ответа вас устроит любой, главное, чтобы он согласовывался с сохранившимися данными из испорченного журнала.
    Формат входных данных
    В первой строке входных данных содержится число n (1≤𝑛≤10^5) — количество дней, на протяжении которых проводились замеры.
    Во второй строке содержатся n целых чисел 𝑎𝑖, разделенных пробелом.
    равно - 1, если соответствующий лист нечитаемый, а иначе это число, записанное на i-м листе, в этом случае 𝑎𝑖 не превосходит 10^9
    Формат выходных данных
    Если в журнале была допущена ошибка, выведите «NO» (без кавычек). В противном случае, в первой строке выведите «YES»,
    а во второй строке выведите n натуральных чисел от 1 до 10^9 i-е из которых равняется количеству выпавшего снега в i-й день.
    */

    //Task 5 hackers
    /*
     * Миша участвует в специальном CTF-соревновании в составе команды, который проходит в формате ﻿24﻿-часового хакатона.
     * Хакатон длится целые сутки после его начала. Если хакатон начинается в ﻿18: 00:00﻿ одного дня, то последняя секунда,
     * в которую можно сдать решение, будет ﻿17:59:59﻿ следующего дня.
        Цель в CTF-соревновании — взломать наибольшее количество серверов с наименьшим штрафом.
    Каждый сервер имеет свой идентификатор — одну заглавную латинскую букву. Команды взламывают сервера независимо,
    и взломы одной команды никак не влияют на другие команды.
        Если команда взламывает сервер, её счет увеличивается на один — а к штрафному времени прибавляется время в минутах,
    округленное вниз, которое прошло от начала соревнования до времени взлома. Если перед удачной попыткой взлома
    одного сервера команда совершает одну или несколько неудачных попыток взлома этого же сервера — то к штрафному времени
    прибавляется по двадцать минут за каждую такую неудачную попытку. При этом, если сервер в итоге не был взломан,
    штрафное время не начисляется. В ходе соревнования команды могут делать «﻿PING﻿» запросы к серверу,
    которые никак не учитываются при подсчете результатов, и за них не предусмотрено начисление штрафного времени.
        Побеждает та команда, которая взламывает наибольшее количество серверов, а если таких несколько, то команда с наименьшим штрафным временем. В начальный момент времени команды не взломали ни одного сервера и имеют штрафное время, равное нулю.
        Напишите программу, которая выводит результаты хакатона.

    Формат входных данных В первой строке дано время начала хакатона в формате ﻿hh:mm:ss﻿, где даны соответственно часы,
    минуты и секунды соответственно ﻿(0≤hh≤23,0≤mm,ss≤59)﻿.
        Во второй строке дано целое число ﻿n﻿ ﻿(1≤n≤1000)﻿ — количество запросов к серверам за весь хакатон.
        Далее следуют ﻿n﻿ строк с описаниями. В начале каждой строки записано название команды в двойных кавычках.
    Название может состоять из строчных и заглавных латинских букв, пробелов и цифр от ﻿1﻿ до ﻿9﻿. Название команды
    не пустое и не превосходит ﻿255﻿ символов. После через пробел дано время запроса в аналогичном времени начала
    хакатона формате.
        Далее через пробел идет одна заглавная латинская буква — идентификатор сервера. Далее указан результат запроса
    команды к серверу: ﻿ACCESSED﻿ — сервер взломан; ﻿DENIED﻿ — неудачная попытка взлома; ﻿FORBIDEN﻿ — неудачная попытка взлома;
    ﻿PONG﻿ — ответ на запрос «﻿PING﻿».
        Формат выходных данных Вывод должен содержать итоговую таблицу результатов — по строке на каждую команду.
    Строки должны быть отсортированы по результату (количество взломанных серверов и штрафное время),
    а если у нескольких команд результаты равны, то порядок команд определяется лексикографически меньшим названием команды.
        Каждая строка должна начинаться с места команды в итоговом зачете. Место команды — это ﻿k+1﻿, где ﻿k﻿ — число команд,
    имеющих строго лучший результат. Далее через пробел идет название команды в двойных кавычках, а за ним через пробел два 
    числа — количество взломанных серверов и штрафное время.
     * 
     * 
     * 
     */
}
